"use strict";(self.webpackChunkbalena_labs_docs=self.webpackChunkbalena_labs_docs||[]).push([[701],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),f=c(n),m=o,d=f["".concat(l,".").concat(m)]||f[m]||p[m]||i;return n?r.createElement(d,a(a({ref:t},u),{},{components:n})):r.createElement(d,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},721:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={},a=void 0,s={unversionedId:"Customising the Environment/Styles",id:"Customising the Environment/Styles",title:"Styles",description:"All style configuration can be done from ui/src/config/qStyles.ts:",source:"@site/docs/Customising the Environment/Styles.md",sourceDirName:"Customising the Environment",slug:"/Customising the Environment/Styles",permalink:"/starter-interface/Customising the Environment/Styles",draft:!1,editUrl:"https://github.com/balena-labs-research/starter-interface/edit/main/docs/Customising the Environment/Styles.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Device Configuration",permalink:"/starter-interface/Customising the Environment/Device Configuration"},next:{title:"Useful Extensions",permalink:"/starter-interface/Useful Extensions"}},l={},c=[],u={toc:c};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"All style configuration can be done from ",(0,o.kt)("inlineCode",{parentName:"p"},"ui/src/config/qStyles.ts"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'//\n// Configuration file for various visual effects, headers and colours\n//\n\n// Global button configuration\nexport const qBtnStyle = {\n  color: "secondary",\n  outline: false,\n  rounded: true,\n  unelevated: true,\n  size: "sm",\n  "no-caps": true,\n};\n\n// Header configuration\nexport const qHeaderStyle = {\n  header: {\n    elevated: true,\n  },\n  // Remove the logo lines to have no logo\n  logo_coloured: "logo_colour.svg", // Logo for displaying on white backgrounds.\n  logo_white: "logo_white.svg", // Logo for displaying on coloured backgrounds.\n  title: { class: "text-subtitle1" },\n};\n\n// Global avatar configuration, for small icons or buttons used throughout the interface\nexport const qAvatarStyle = {\n  size: "lg",\n  color: "accent",\n  "text-color": "primary",\n};\n\n// Global spinner configuration, used for things like loading indicators\nexport const qSpinnerStyle = {\n  class: "text-accent",\n  size: "6em",\n};\n')))}p.isMDXComponent=!0}}]);