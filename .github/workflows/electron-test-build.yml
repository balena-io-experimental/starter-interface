name: "Build Electron Test App"
on:
  pull_request:
    branches:
      - main

env:
  ON_DEVICE: false

jobs:
  build:
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        job_name: ["linux", "mac_amd64", mac_arm64, "windows"]

        include:
          - job_name: linux
            os: ubuntu-latest

          - job_name: mac_amd64
            os: macos-latest
            sign: true

          - job_name: mac_arm64
            os: macos-latest
            build_arch: --arch arm64
            sign: true

          - job_name: windows
            os: windows-latest

    name: ${{ matrix.job_name }}

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "18.10.0"

      - name: Install the Apple certificate and provisioning profile
        if: ${{ matrix.sign }}
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.APPLE_SIGNING }}
          P12_PASSWORD: ${{ secrets.APPLE_SIGNING_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Install packages
        run: yarn install

      - name: Set Yarn version
        run: yarn set version classic

      - name: Build Electron App
        run: yarn build-electron ${{ matrix.build_arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.job_name }}
          path: ui/dist/electron/Packaged/balena Starter Interface*
